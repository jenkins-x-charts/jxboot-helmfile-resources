{{- if eq .Values.lighthouseEngine "tekton" }}
{{- if eq .Values.secrets.kind "ExternalSecret" }}
apiVersion: kubernetes-client.io/v1
kind: ExternalSecret
metadata:
  name: tekton-container-registry-auth
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    secret.jenkins-x.io/replica-source: "true"
    gitops.jenkins-x.io/pipeline: 'namespaces'
  namespace: jx
  annotations:
    secret.jenkins-x.io/schema-object: {{`'{"name":"tekton-container-registry-auth","properties":[{"name":".dockerconfigjson","question":"Docker JSON Configuration","help":"This is the docker JSON configuration for authenticating with container registries","template":"{\n{{- if eq .Requirements.cluster.provider \"gke\" }}\n\n  \"credHelpers\": {\n      \"gcr.io\": \"gcr\",\n      \"us.gcr.io\": \"gcr\",\n      \"eu.gcr.io\": \"gcr\",\n      \"asia.gcr.io\": \"gcr\",\n      \"staging-k8s.gcr.io\": \"gcr\"\n  },\n\n{{- else if and (eq .Requirements.cluster.provider \"eks\") (hasKey .Requirements \"cluster\") (hasKey .Requirements.cluster \"registry\") (contains \"aws\" .Requirements.cluster.registry) }}\n\n{{- if and (hasKey .Requirements \"cluster\") (hasKey .Requirements.cluster \"registry\") (not (eq .Requirements.cluster.registry (secret \"jx.container-registry-auth\" \"url\"))) }}\n  \"credHelpers\": {\n    \"{{ .Requirements.cluster.registry }}\": \"ecr-login\"\n  },\n{{- end }}\n\n{{- else if eq .Requirements.cluster.provider \"aws\" }}\n\n  \"credsStore\": \"ecr-login\",\n\n{{- else if eq .Requirements.cluster.provider \"aks\" }}\n\n{{- if and (hasKey .Requirements \"cluster\") (hasKey .Requirements.cluster \"registry\") (not (eq .Requirements.cluster.registry (secret \"jx.container-registry-auth\" \"url\"))) }}\n  \"credHelpers\": {\n    \"{{ .Requirements.cluster.registry }}\": \"acr-env\"\n  },\n{{- end }}\n\n{{- end }}\n\n  \"auths\":{\n  {{- if secret \"jx.container-registry-auth\" \"password\" }}\n    {{ secret \"jx.container-registry-auth\" \"url\" | default \"https://index.docker.io/v1/\" | quote }}: {\n        \"auth\": {{ auth \"jx.container-registry-auth\" \"username\" \"password\" | b64enc | quote}},\n        \"email\": {{ secret \"jx.container-registry-auth\" \"email\" | default \"jenkins-x@googlegroups.com\" | quote }}\n    }\n  {{- end }}\n  {{- if or (eq .Requirements.cluster.gitServer \"https://github.com\") (eq .Requirements.cluster.gitServer \"https://github.com/\") }}\n    {{- if secret \"jx.container-registry-auth\" \"password\" }}\n    ,\n    {{- end }}\n    \"ghcr.io\": {\n      {{- if secret \"jx-git-operator.jx-boot\" \"email\" }}\n        \"email\": {{ secret \"jx-git-operator.jx-boot\" \"email\" | quote }},\n      {{- end }}\n        \"auth\": {{ auth \"jx-git-operator.jx-boot\" \"username\" \"password\" | b64enc | quote}}\n    }\n  {{- end }}\n  }\n}"}],"mandatory":true}'`}}
spec:
  backendType: gcpSecretsManager
  projectId: {{ .Values.jxRequirements.cluster.project }}
  data:
  - name: .dockerconfigjson
    key: {{ .Values.jxRequirements.cluster.clusterName }}-tekton-container-registry-auth
    property: .dockerconfigjson
    version: latest
  template:
    metadata:
      annotations:
        tekton.dev/docker-0: "https://index.docker.io/v1/"
        meta.helm.sh/release-name: 'jxboot-helmfile-resources'
        secret.jenkins-x.io/schema-object: {{`'{"name":"tekton-container-registry-auth","properties":[{"name":".dockerconfigjson","question":"Docker JSON Configuration","help":"This is the docker JSON configuration for authenticating with container registries","template":"{\n{{- if eq .Requirements.cluster.provider \"gke\" }}\n\n  \"credHelpers\": {\n      \"gcr.io\": \"gcr\",\n      \"us.gcr.io\": \"gcr\",\n      \"eu.gcr.io\": \"gcr\",\n      \"asia.gcr.io\": \"gcr\",\n      \"staging-k8s.gcr.io\": \"gcr\"\n  },\n\n{{- else if and (eq .Requirements.cluster.provider \"eks\") (hasKey .Requirements \"cluster\") (hasKey .Requirements.cluster \"registry\") (contains \"aws\" .Requirements.cluster.registry) }}\n\n{{- if and (hasKey .Requirements \"cluster\") (hasKey .Requirements.cluster \"registry\") (not (eq .Requirements.cluster.registry (secret \"jx.container-registry-auth\" \"url\"))) }}\n  \"credHelpers\": {\n    \"{{ .Requirements.cluster.registry }}\": \"ecr-login\"\n  },\n{{- end }}\n\n{{- else if eq .Requirements.cluster.provider \"aws\" }}\n\n  \"credsStore\": \"ecr-login\",\n\n{{- else if eq .Requirements.cluster.provider \"aks\" }}\n\n{{- if and (hasKey .Requirements \"cluster\") (hasKey .Requirements.cluster \"registry\") (not (eq .Requirements.cluster.registry (secret \"jx.container-registry-auth\" \"url\"))) }}\n  \"credHelpers\": {\n    \"{{ .Requirements.cluster.registry }}\": \"acr-env\"\n  },\n{{- end }}\n\n{{- end }}\n\n  \"auths\":{\n  {{- if secret \"jx.container-registry-auth\" \"password\" }}\n    {{ secret \"jx.container-registry-auth\" \"url\" | default \"https://index.docker.io/v1/\" | quote }}: {\n        \"auth\": {{ auth \"jx.container-registry-auth\" \"username\" \"password\" | b64enc | quote}},\n        \"email\": {{ secret \"jx.container-registry-auth\" \"email\" | default \"jenkins-x@googlegroups.com\" | quote }}\n    }\n  {{- end }}\n  {{- if or (eq .Requirements.cluster.gitServer \"https://github.com\") (eq .Requirements.cluster.gitServer \"https://github.com/\") }}\n    {{- if secret \"jx.container-registry-auth\" \"password\" }}\n    ,\n    {{- end }}\n    \"ghcr.io\": {\n      {{- if secret \"jx-git-operator.jx-boot\" \"email\" }}\n        \"email\": {{ secret \"jx-git-operator.jx-boot\" \"email\" | quote }},\n      {{- end }}\n        \"auth\": {{ auth \"jx-git-operator.jx-boot\" \"username\" \"password\" | b64enc | quote}}\n    }\n  {{- end }}\n  }\n}"}],"mandatory":true}'`}}
      labels:
        app.kubernetes.io/component: webhook
        app.kubernetes.io/instance: default
        app.kubernetes.io/part-of: tekton-pipelines
        secret.jenkins-x.io/replica-source: "true"
    type: kubernetes.io/dockerconfigjson
{{- else }}
apiVersion: v1
data:
  .dockerconfigjson: {{ .Values.pipeline.auth.docker.configJson | b64enc | quote }}
kind: Secret
metadata:
  name: tekton-container-registry-auth
  annotations:
    tekton.dev/docker-0: {{ .Values.pipeline.auth.docker.url | quote }}
  labels:
    app.kubernetes.io/component: webhook
    app.kubernetes.io/instance: default
    app.kubernetes.io/part-of: tekton-pipelines
    secret.jenkins-x.io/replica-source: "true"
type: kubernetes.io/dockerconfigjson
{{- end -}}
{{- end -}}
